{"version":3,"sources":["firebase.js","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","useState","tareas","setTareas","tarea","setTarea","fecha","setFecha","id","setId","modoEdicion","setModoEdicion","React","useEffect","obtenerDatos","a","db","firestore","collection","get","data","console","log","docs","map","doc","arrayData","agregar","e","preventDefault","trim","nuevaTarea","name","date","add","eliminar","delete","arrayFiltrado","filter","item","editar","editarTarea","update","arrayEditado","className","src","alt","width","height","type","placeholder","onClick","activarEdicion","onSubmit","value","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe9f1d6e.chunk.js","sourcesContent":["//import de la libreria\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBKZRYvgTYBMAX0pWrNdGn_HJ1aoPVygWE\",\r\n  authDomain: \"crudreact-fc384.firebaseapp.com\",\r\n  projectId: \"crudreact-fc384\",\r\n  storageBucket: \"crudreact-fc384.appspot.com\",\r\n  messagingSenderId: \"915334697634\",\r\n  appId: \"1:915334697634:web:760c4009aa4bb84565fdfb\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport {firebase}","import React, {useState} from 'react';\r\nimport { Fragment } from 'react';\r\nimport './App.css';\r\nimport {firebase} from './firebase';\r\n\r\nfunction App() {\r\n  //Constante para mostrar en el html las tareas\r\n  const [tareas, setTareas] = useState([])\r\n  //Constante para agregar la tarea\r\n  const [tarea, setTarea] = useState('')\r\n  //Constante para agregar la tarea\r\n  const [fecha, setFecha] = useState('')\r\n  //Constante para edicion obtener id\r\n  const [id, setId] = useState('')\r\n\r\n  //Constante bandera para swichear entre agregar y editar\r\n  const [modoEdicion, setModoEdicion] = useState(false)\r\n\r\n  React.useEffect(() => {\r\n\r\n    //Funcion asyc para obterner datos\r\n    const obtenerDatos = async () => {\r\n      try {\r\n        const db = firebase.firestore()\r\n        const data = await db.collection('tareas').get()\r\n        console.log(data.docs)\r\n        const arrayData = await data.docs.map(doc => ({ id: doc.id, ...doc.data()}))\r\n        console.log(arrayData)\r\n        setTareas(arrayData)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    obtenerDatos()\r\n\r\n  }, [])\r\n\r\n  //funcion agregar\r\n  const agregar = async (e) => {\r\n    console.log(\"Se esta ejecutando la funcion Agregar\")\r\n    e.preventDefault()\r\n    //Validación para saber si esta llena o vacia la tarea\r\n    if(!tarea.trim() | !fecha.trim()){\r\n      console.log(\"Falta un Campo\")\r\n      return\r\n    }\r\n\r\n    //Colocamos un try y catch por que la funcion es async\r\n    //Vamos a invocar a db y firestore\r\n    try {\r\n      const db = firebase.firestore()\r\n      //Declaramos un objeto para enviar todos los campos que enviaremos\r\n      const nuevaTarea = {\r\n        name: tarea,\r\n        date: fecha\r\n      }\r\n\r\n      //Codigo para agregar la tarea en firebase codigo de plataforma\r\n      const data = await db.collection('tareas').add(nuevaTarea)\r\n\r\n      //Con esto actualizo la lista sin dar refres prueba antes de poner\r\n      setTareas([\r\n        ...tareas,\r\n        {...nuevaTarea, id: data.id}\r\n      ])      \r\n\r\n      //Limpio tarea\r\n      setTarea('')\r\n      setFecha('')\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n    console.log(tarea)\r\n  }\r\n\r\n  //Funcion eliminar registros\r\n  const eliminar = async (id) => {\r\n    try {\r\n      console.log(id)\r\n      const db = firebase.firestore()\r\n      await db.collection('tareas').doc(id).delete()\r\n\r\n      const arrayFiltrado = tareas.filter(item => item.id !== id)\r\n      \r\n      console.log(\"Arreglo completo\",tareas)\r\n      console.log(\"Arreglo Filtrado\",arrayFiltrado)\r\n      \r\n      setTareas(arrayFiltrado)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n\r\n  //Funcion para activar la edición\r\n  const activarEdicion = (item) =>{\r\n    setModoEdicion(true)\r\n    console.log(\"Elemento name\",item.name)\r\n    setTarea(item.name)\r\n    console.log(\"Elemento date\",item.date)\r\n    setFecha(item.date)\r\n    console.log(\"Elemento id\",item.id)\r\n    setId(item.id)\r\n  }\r\n\r\n  const editar = async (e) => {\r\n    console.log(\"Se esta ejecutando la funcion editar\")\r\n    e.preventDefault()\r\n    if(!tarea.trim() | !fecha.trim()){\r\n      console.log(\"Falta un Campo\")\r\n      return\r\n    }\r\n\r\n    try {\r\n      const db = firebase.firestore()\r\n      //Declarar un objeto para mandar los datos actualizados\r\n      const editarTarea = {\r\n        name: tarea,\r\n        date: fecha\r\n      }\r\n\r\n      await db.collection('tareas').doc(id).update(editarTarea)\r\n\r\n      //Actulizar en pantalla sin refescar\r\n      const arrayEditado = tareas.map(item => (\r\n        item.id === id ? editarTarea : item\r\n      ))\r\n\r\n      setTareas(arrayEditado)\r\n\r\n      //Limpiar constantes\r\n      setTarea('')\r\n      setFecha('')\r\n      setId('')\r\n      setModoEdicion(false)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n    <div className=\"container-fluid\">\r\n    <nav className=\"navbar navbar-dark bg-primary\">\r\n    < h1 className=\"text-center\"><img src=\"logo-logomark.png\" alt=\"logo\" width=\"50\" height=\"75\"/>Proyecto Firebase</h1>\r\n    <form className=\"d-flex\">\r\n    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n    <button className=\"btn btn-dark\" type=\"submit\"> <i className=\"fas fa-search\"></i></button>\r\n    </form>\r\n    </nav><br/>\r\n    </div>\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n            <h3 className=\"text-center\">Lista de Tareas</h3>\r\n            <ul className=\"list-group\">\r\n            {\r\n                tareas.map(item => (\r\n                  <li className=\"list-group-item\" key={item.id}>\r\n                  <span>{item.name}</span>\r\n                  <br/>\r\n                  <span>{item.date}</span>\r\n                  <br/>\r\n                  <div className=\"text-center\">\r\n                    <button \r\n                    className=\"btn btn-danger btn-sm float-right mr-2\"\r\n                    onClick={() => eliminar(item.id)}>\r\n                        <i className=\"fas fa-trash\"></i> Eliminar\r\n                    </button>\r\n                    <button  \r\n                    className=\"btn btn-info btn-sm float-right mr-2\"\r\n                    onClick={() => activarEdicion(item)}>\r\n                        <i className=\"fas fa-edit\"></i> Editar\r\n                    </button>\r\n                    </div>\r\n                </li>\r\n                ))\r\n            }\r\n            </ul>\r\n        </div>\r\n        \r\n        <div className=\"col-md-6 text-center\">\r\n            <h3>{\r\n                modoEdicion ? 'Editar Tarea' : 'Agregar Tarea'\r\n              }</h3>\r\n            <form onSubmit={\r\n              modoEdicion ? editar : agregar\r\n              }>\r\n              <input \r\n                type=\"text\" \r\n                className=\"form-control mb-2\"\r\n                placeholder='Ingrese Tarea'\r\n                value={tarea}\r\n                onChange={e => setTarea(e.target.value)}\r\n              />\r\n              <input \r\n                type=\"datetime-local\"\r\n                className=\"form-control mb-2\"\r\n                value={fecha}\r\n                onChange={e => setFecha(e.target.value)}\r\n              />\r\n              <div className=\"d-grid\">\r\n              <button\r\n                type='submit'\r\n                className={\r\n                  modoEdicion ? \"btn btn-warning btn-block\" : \"btn btn-success btn-block\"\r\n                }\r\n              >{\r\n                modoEdicion ? 'Actualizar' : 'Guardar'\r\n              }</button></div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n    </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}